version: '3.3'

services:
  mssql:
    container_name: sql-server
    image: mcr.microsoft.com/mssql/server:2022-latest
    network_mode: host
    restart: always
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "tMIxN11yGZgMC"
  setup_mssql:
    image: mcr.microsoft.com/mssql-tools
    network_mode: host
    depends_on:
      - mssql
    restart: "no"
    volumes:
      - ./:/app
    entrypoint:
      - "bash"
      - "-c"
      - |
        while ! /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P tMIxN11yGZgMC -Q "SELECT 1"; do
          sleep 1
        done
        /opt/mssql-tools/bin/sqlcmd -S sql-server -U sa -P tMIxN11yGZgMC -i /app/unit-tests.sql
  minio:
    container_name: minio
    hostname: minio-e2e
    image: quay.io/minio/minio
    network_mode: host
    restart: always
    command:
      - server
      - /data
      - "--console-address"
      - ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9001" ]
      interval: 30s
      timeout: 10s
      retries: 5
  prepare_buckets:
    container_name: minio-setup
    image: quay.io/minio/minio
    network_mode: host
    depends_on:
      minio:
        condition: service_healthy
    entrypoint:
      - "/bin/sh"
      - "-c"
      - |
        mc alias set e2e "http://localhost:9000" minioadmin minioadmin
        mc admin info e2e
        mc mb e2e/tmp && mc mb e2e/lakehouse
  # https://github.com/databricks/docker-spark-iceberg/blob/main/docker-compose.yml
  # note there is no publicly available image for Polaris yet
  # follow guidelines from https://github.com/apache/polaris?tab=readme-ov-file#more-build-and-run-options to build one
  polaris:
    container_name: polaris
    image: ghcr.io/sneaksanddata/apache-polaris:latest
    network_mode: host
    restart: always
    depends_on:
      prepare_buckets:
        condition: service_completed_successfully
    environment:
      AWS_REGION: us-east-1
      AWS_ENDPOINT_URL_S3: http://localhost:9000
      AWS_ENDPOINT_URL_STS: http://localhost:9000
      # add aws keys as dropwizard config
      JAVA_OPTS: -Ddw.awsAccessKey=minioadmin -Ddw.awsSecretKey=minioadmin

    healthcheck:
      test: ["CMD", "curl", "http://localhost:8182/healthcheck"]
      interval: 10s
      timeout: 10s
      retries: 5
  create-polaris-catalog:
    image: curlimages/curl
    network_mode: host
    depends_on:
      polaris:
        condition: service_healthy
    volumes:
      - ./create-polaris-catalog.sh:/create-polaris-catalog.sh
    command: ["/bin/sh", "/create-polaris-catalog.sh"]
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    restart: always
    network_mode: host
    command:
      - azurite-blob
      - "--blobHost"
      - "localhost"
      - "--blobPort"
      - "10001"
  create-cdm-container:
    image: python:3.11-slim-bookworm
    network_mode: host
    depends_on:
      - azurite
    volumes:
      - ./populate-cdm-container.py:/populate-cdm-container.py
    command: [ "/bin/sh", "-c", "pip install azure-storage-blob==12.24.1 requests && python /populate-cdm-container.py" ]
  trino:
    depends_on:
      polaris:
        condition: service_healthy
    network_mode: host
    image: "trinodb/trino:474"
    volumes:
      - ./unit-tests.properties:/etc/trino/catalog/iceberg.properties
